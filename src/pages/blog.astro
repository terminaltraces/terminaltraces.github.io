---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

const allBlogPosts = await getCollection('blog');
const publishedPosts = allBlogPosts
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const featuredPosts = publishedPosts.filter(post => post.data.featured);


// Get all unique tags
const allTags = [...new Set(publishedPosts.flatMap(post => post.data.tags))].sort();
---

<BaseLayout
  title="Blog - Drew's Cosmic Code Chronicles"
  description="Explore Drew's thoughts on code, coffee, and the beautiful chaos of web development. From technical deep-dives to personal reflections, discover insights from a developer's journey through the digital universe."
>
  <!-- Hero Section -->
  <section class="py-20 bg-gradient-hero">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto text-center space-y-8">
        <h1 class="text-5xl md:text-6xl font-bold text-gradient-cosmic">
          Cosmic Code Chronicles
        </h1>
        <p class="text-xl md:text-2xl text-cosmic-600 dark:text-cosmic-400 max-w-3xl mx-auto">
          Thoughts, discoveries, and late-night coding adventures from my corner of the digital universe ✨
        </p>
        <div class="flex items-center justify-center space-x-4 text-sm text-cosmic-500 dark:text-cosmic-400">
          <span class="flex items-center space-x-1">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd" />
            </svg>
            <span>{publishedPosts.length} posts</span>
          </span>
          <span class="flex items-center space-x-1">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
            </svg>
            <span>{allTags.length} topics</span>
          </span>
          <span class="coffee-steam">☕</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Search & Filter Section -->
  <section class="py-8 bg-white dark:bg-cosmic-900 border-b border-cosmic-200 dark:border-cosmic-700">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto">
        <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
          <!-- Search -->
          <div class="flex-1 max-w-lg">
            <div class="relative">
              <input
                type="text"
                id="search-input"
                placeholder="Search posts..."
                class="w-full pl-10 pr-4 py-3 rounded-lg border border-cosmic-300 dark:border-cosmic-600 bg-white dark:bg-cosmic-800 text-cosmic-900 dark:text-cosmic-100 focus:outline-none focus:ring-2 focus:ring-nebula-500 focus:border-transparent transition-all duration-200"
              />
              <svg class="absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-cosmic-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
          </div>

          <!-- Filter Buttons -->
          <div class="flex flex-wrap gap-2">
            <button
              class="filter-btn active px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 focus-cosmic"
              data-filter="all"
            >
              All Posts
            </button>
            <button
              class="filter-btn px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 focus-cosmic"
              data-filter="featured"
            >
              Featured
            </button>
            <button
              class="filter-btn px-4 py-2 rounded-lg text-sm font-medium transition-all duration-200 focus-cosmic"
              data-filter="recent"
            >
              Recent
            </button>
          </div>
        </div>

        <!-- Tag Cloud -->
        <div class="mt-6 pt-6 border-t border-cosmic-200 dark:border-cosmic-700">
          <div class="flex flex-wrap gap-2">
            <span class="text-sm font-medium text-cosmic-700 dark:text-cosmic-300 mr-2">Topics:</span>
            {allTags.map((tag) => (
              <button
                class="tag-filter px-3 py-1 text-sm rounded-full bg-cosmic-100 dark:bg-cosmic-800 text-cosmic-700 dark:text-cosmic-300 hover:bg-nebula-100 dark:hover:bg-nebula-900 hover:text-nebula-700 dark:hover:text-nebula-300 transition-colors duration-200 focus-cosmic"
                data-tag={tag}
              >
                #{tag}
              </button>
            ))}
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Featured Posts -->
  {featuredPosts.length > 0 && (
    <section class="py-20 bg-gradient-to-br from-nebula-50/30 to-starlight-50/30 dark:from-cosmic-800/30 dark:to-cosmic-700/30">
      <div class="container mx-auto px-6">
        <div class="max-w-6xl mx-auto">
          <div class="text-center mb-16">
            <h2 class="text-4xl font-bold text-gradient-cosmic mb-6">
              Featured Posts
            </h2>
            <p class="text-xl text-cosmic-600 dark:text-cosmic-400">
              The posts that sparked the most interesting conversations ✨
            </p>
          </div>

          <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {featuredPosts.map((post) => (
              <article class="featured-post card-cosmic p-8 hover-lift group" data-tags={post.data.tags.join(',')}>
                <div class="space-y-6">
                  <!-- Date & Featured Badge -->
                  <div class="flex items-center justify-between">
                    <time
                      datetime={post.data.date.toISOString()}
                      class="text-sm text-cosmic-500 dark:text-cosmic-400"
                    >
                      {post.data.date.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                    <span class="inline-block px-2 py-1 text-xs font-medium bg-gradient-to-r from-nebula-500 to-starlight-500 text-white rounded-full">
                      Featured
                    </span>
                  </div>

                  <!-- Title -->
                  <h3 class="text-2xl font-bold text-cosmic-900 dark:text-cosmic-100 group-hover:text-nebula-600 dark:group-hover:text-nebula-400 transition-colors duration-200">
                    <a href={`/blog/${post.slug}`} class="focus-cosmic rounded">
                      {post.data.title}
                    </a>
                  </h3>

                  <!-- Description -->
                  <p class="text-cosmic-700 dark:text-cosmic-300 leading-relaxed">
                    {post.data.description}
                  </p>

                  <!-- Tags -->
                  <div class="flex flex-wrap gap-2">
                    {post.data.tags.map((tag) => (
                      <span class="tag-cosmic text-sm">
                        #{tag}
                      </span>
                    ))}
                  </div>

                  <!-- Read More -->
                  <div class="flex items-center text-nebula-600 dark:text-nebula-400 group-hover:text-nebula-700 dark:group-hover:text-nebula-300 transition-colors duration-200">
                    <a href={`/blog/${post.slug}`} class="font-medium focus-cosmic rounded">
                      Read full post
                    </a>
                    <svg class="w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      </div>
    </section>
  )}

  <!-- All Posts -->
  <section class="py-20 bg-white dark:bg-cosmic-900">
    <div class="container mx-auto px-6">
      <div class="max-w-4xl mx-auto">
        <div class="text-center mb-16">
          <h2 class="text-4xl font-bold text-gradient-cosmic mb-6">
            All Posts
          </h2>
          <p class="text-xl text-cosmic-600 dark:text-cosmic-400">
            Every thought, tutorial, and late-night coding reflection
          </p>
        </div>

        <!-- Posts Grid -->
        <div id="posts-container" class="space-y-8">
          {publishedPosts.map((post) => (
            <article class="blog-post card-cosmic p-8 hover-lift group" data-tags={post.data.tags.join(',')}>
              <div class="grid grid-cols-1 lg:grid-cols-4 lg:gap-8">
                <!-- Date & Meta -->
                <div class="lg:col-span-1 space-y-4 mb-6 lg:mb-0">
                  <time
                    datetime={post.data.date.toISOString()}
                    class="block text-sm text-cosmic-500 dark:text-cosmic-400"
                  >
                    {post.data.date.toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'short',
                      day: 'numeric'
                    })}
                  </time>

                  {post.data.featured && (
                    <span class="inline-block px-2 py-1 text-xs font-medium bg-gradient-to-r from-nebula-500 to-starlight-500 text-white rounded-full">
                      Featured
                    </span>
                  )}

                  <!-- Tags -->
                  <div class="flex flex-wrap gap-1">
                    {post.data.tags.slice(0, 3).map((tag) => (
                      <span class="tag-cosmic text-xs">
                        #{tag}
                      </span>
                    ))}
                    {post.data.tags.length > 3 && (
                      <span class="text-xs text-cosmic-500 dark:text-cosmic-400">
                        +{post.data.tags.length - 3}
                      </span>
                    )}
                  </div>
                </div>

                <!-- Content -->
                <div class="lg:col-span-3 space-y-4">
                  <h3 class="text-xl lg:text-2xl font-bold text-cosmic-900 dark:text-cosmic-100 group-hover:text-nebula-600 dark:group-hover:text-nebula-400 transition-colors duration-200">
                    <a href={`/blog/${post.slug}`} class="focus-cosmic rounded">
                      {post.data.title}
                    </a>
                  </h3>

                  <p class="text-cosmic-700 dark:text-cosmic-300 leading-relaxed">
                    {post.data.description}
                  </p>

                  <div class="flex items-center text-sm text-nebula-600 dark:text-nebula-400 group-hover:text-nebula-700 dark:group-hover:text-nebula-300 transition-colors duration-200">
                    <a href={`/blog/${post.slug}`} class="font-medium focus-cosmic rounded">
                      Read more
                    </a>
                    <svg class="w-4 h-4 ml-1 group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
                    </svg>
                  </div>
                </div>
              </div>
            </article>
          ))}
        </div>

        <!-- No Results Message -->
        <div id="no-results" class="hidden text-center py-12">
          <div class="text-6xl mb-4">🔍</div>
          <h3 class="text-2xl font-bold text-cosmic-900 dark:text-cosmic-100 mb-2">
            No posts found
          </h3>
          <p class="text-cosmic-600 dark:text-cosmic-400">
            Try adjusting your search terms or filters
          </p>
        </div>

        <!-- Load More Button (for future pagination) -->
        <div class="text-center mt-12">
          <button
            id="load-more"
            class="btn-cosmic-outline focus-cosmic hidden"
          >
            Load More Posts
          </button>
        </div>
      </div>
    </div>
  </section>

  <!-- Newsletter Signup -->
  <section class="py-20 bg-cosmic-900 dark:bg-cosmic-950">
    <div class="container mx-auto px-6">
      <div class="max-w-2xl mx-auto text-center space-y-8">
        <div class="space-y-4">
          <h2 class="text-3xl md:text-4xl font-bold text-white">
            Never Miss a Post ✨
          </h2>
          <p class="text-cosmic-300 text-lg">
            Get notified when I publish new insights about code, coffee, and the developer experience.
          </p>
        </div>

        <form class="space-y-4 max-w-md mx-auto" data-netlify="true">
          <div class="flex flex-col sm:flex-row gap-3">
            <input
              type="email"
              name="email"
              placeholder="your@email.com"
              class="flex-1 px-4 py-3 rounded-lg bg-cosmic-800 border border-cosmic-700 text-white placeholder-cosmic-400 focus:outline-none focus:ring-2 focus:ring-nebula-500 focus:border-transparent"
              required
            />
            <button
              type="submit"
              class="btn-starlight whitespace-nowrap"
            >
              Subscribe
            </button>
          </div>
          <p class="text-xs text-cosmic-400">
            Quality over quantity. No spam, just thoughtful content.
          </p>
        </form>
      </div>
    </div>
  </section>
</BaseLayout>

<script>
  // Search and filter functionality
  const searchInput = document.getElementById('search-input');
  const filterButtons = document.querySelectorAll('.filter-btn');
  const tagButtons = document.querySelectorAll('.tag-filter');

  const noResults = document.getElementById('no-results');
  const allPosts = document.querySelectorAll('.blog-post');

  let currentFilter = 'all';
  let currentTag = '';
  let currentSearch = '';

  // Search functionality
  searchInput?.addEventListener('input', (e) => {
    currentSearch = (e.target as HTMLInputElement).value.toLowerCase();
    filterPosts();
  });

  // Filter buttons
  filterButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Update active state
      filterButtons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');

      currentFilter = (button as HTMLElement).dataset.filter || 'all';
      filterPosts();
    });
  });

  // Tag filters
  tagButtons.forEach(button => {
    button.addEventListener('click', () => {
      // Toggle tag selection
      if (currentTag === (button as HTMLElement).dataset.tag) {
        currentTag = '';
        button.classList.remove('active');
      } else {
        // Remove previous active tag
        tagButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        currentTag = (button as HTMLElement).dataset.tag || '';
      }
      filterPosts();
    });
  });

  function filterPosts() {
    let visibleCount = 0;

    allPosts.forEach(post => {
      const title = post.querySelector('h3')?.textContent?.toLowerCase() || '';
      const description = post.querySelector('p')?.textContent?.toLowerCase() || '';
      const tags = (post as HTMLElement).dataset.tags?.toLowerCase() || '';
      const isFeatured = post.classList.contains('featured-post') || post.querySelector('.bg-gradient-to-r');

      // Check search
      const matchesSearch = !currentSearch ||
        title.includes(currentSearch) ||
        description.includes(currentSearch) ||
        tags.includes(currentSearch);

      // Check filter
      const matchesFilter = currentFilter === 'all' ||
        (currentFilter === 'featured' && isFeatured) ||
        (currentFilter === 'recent' && post === allPosts[0]); // First post is most recent

      // Check tag
      const matchesTag = !currentTag || tags.includes(currentTag);

      if (matchesSearch && matchesFilter && matchesTag) {
        (post as HTMLElement).style.display = 'block';
        visibleCount++;
      } else {
        (post as HTMLElement).style.display = 'none';
      }
    });

    // Show/hide no results message
    if (visibleCount === 0) {
      noResults?.classList.remove('hidden');
    } else {
      noResults?.classList.add('hidden');
    }
  }

  // Smooth scrolling for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', (e) => {
      e.preventDefault();
      const target = document.querySelector((anchor as HTMLAnchorElement).getAttribute('href') || '');
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
</script>

<style>
  /* Filter button styles */
  .filter-btn {
    @apply bg-cosmic-100 dark:bg-cosmic-800 text-cosmic-700 dark:text-cosmic-300;
    @apply hover:bg-nebula-100 dark:hover:bg-nebula-900;
    @apply hover:text-nebula-700 dark:hover:text-nebula-300;
  }

  .filter-btn.active {
    @apply bg-gradient-to-r from-nebula-500 to-starlight-500 text-white;
  }

  /* Tag filter styles */
  .tag-filter.active {
    @apply bg-nebula-500 text-white;
  }

  /* Post hover effects */
  .hover-lift:hover {
    @apply transform -translate-y-2;
  }

  /* Coffee steam animation */
  .coffee-steam {
    animation: float 2s ease-in-out infinite;
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-5px); }
  }

  /* Search input focus effect */
  #search-input:focus {
    @apply shadow-lg shadow-nebula-500/20;
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .blog-post .grid {
      @apply grid-cols-1 gap-4;
    }
  }

  /* Loading animation for future use */
  .loading {
    @apply animate-pulse;
  }

  /* Hide elements during search */
  .search-hidden {
    @apply opacity-50 transform scale-95;
  }
</style>
